//租造格線系統

.row{
    display: flex;
    flex-wrap: wrap;
    margin-right: (-.5 * $grid-gutter-width); // stylelint-disable-line function-disallowed-list
    margin-left: (-.5 * $grid-gutter-width); // stylelint-disable-line function-disallowed-list
    > *{
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
    }
}

@for $i from 1 through $columns {
    .col-#{$i} {
        flex: 0 0 auto;
        width: percentage(($i / $columns));
        padding-right: (.5 * $grid-gutter-width); // stylelint-disable-line function-disallowed-list
        padding-left: (.5 * $grid-gutter-width); // stylelint-disable-line function-disallowed-list
    }
}

@each $size, $size-value in $breakpoint {
    @media screen and (max-width: $size-value) {
        @for $i from 1 through $columns {
            .col-#{$size}-#{$i} {
                flex: 0 0 auto;
                width: percentage(($i / $columns));
                padding-right: (.5 * $grid-gutter-width); // stylelint-disable-line function-disallowed-list
                padding-left: (.5 * $grid-gutter-width); // stylelint-disable-line function-disallowed-list
            }
        }
    }
}

//margin、padding設定

@for $distance from 0 through 12 {
    .p-#{$distance} {
        padding: ($distance * 0.5) + rem;
    }
    .m-#{$distance} {
        margin: ($distance * 0.5) + rem;
    }
}

@each $dir, $dir-value in $direction {
    @for $distance from 0 through 12 {
        .m#{$dir}-#{$distance} {
            margin-#{$dir-value}: ($distance * 0.5) + rem;
        }

        .p#{$dir}-#{$distance} {
            padding-#{$dir-value}: ($distance * 0.5) + rem;
        }
    }
}

@each $size, $size-value in $breakpoint {
    @media screen and (max-width: $size-value) {
        @each $dir, $dir-value in $direction {
            @for $min-distance from 0 through 8 {
                .m#{$dir}-#{$size}-#{$min-distance} {
                    margin-#{$dir-value}: #{$min-distance * 0.5}rem;
                }

                .p#{$dir}-#{$size}-#{$min-distance} {
                    padding-#{$dir-value}: #{$min-distance * 0.5}rem;
                }
            }
        }
    }
}

@for $distance from 0 through 12 {
    .px-#{$distance} {
        padding-right: ($distance * 0.5) + rem;
        padding-left: ($distance * 0.5) + rem;
    }
    .py-#{$distance} {
        padding-top: ($distance * 0.5) + rem;
        padding-bottom: ($distance * 0.5) + rem;
    }
    .mx-#{$distance} {
        margin-right: ($distance * 0.5) + rem;
        margin-left: ($distance * 0.5) + rem;
    }
    .my-#{$distance} {
        margin-top: ($distance * 0.5) + rem;
        margin-bottom: ($distance * 0.5) + rem;
    }
}

@each $size, $size-value in $breakpoint {
    @media screen and (max-width: $size-value) {
        @for $distance from 0 through 12 {
            .px-#{$size}-#{$distance} {
                padding-right: ($distance * 0.5) + rem;
                padding-left: ($distance * 0.5) + rem;
            }

            .py-#{$size}-#{$distance} {
                padding-top: ($distance * 0.5) + rem;
                padding-bottom: ($distance * 0.5) + rem;
            }
        }
    }
}

@each $size, $size-value in $breakpoint {
    @media screen and (max-width: $size-value) {
        @for $distance from 0 through 12 {
            .mx-#{$size}-#{$distance} {
                margin-right: ($distance * 0.5) + rem;
                margin-left: ($distance * 0.5) + rem;
            }

            .my-#{$size}-#{$distance} {
                margin-top: ($distance * 0.5) + rem;
                margin-bottom: ($distance * 0.5) + rem;
            }
        }
    }
}

@each $size,  $size-value in $lineheight{
    .lh-#{$size}{
        line-height: $size-value;
    }
}

//字體大小
@for $size from 1 through 8{
    .fz-#{$size}{
        font-size: ($size * 0.5) + rem;
    }
}


//字體顏色
@each $colors,  $color-value in $color{
    .color-#{$colors}{
        color: $color-value;
    }
}

//背景
@each $colors,  $color-value in $color{
    .bg-#{$colors}{
        background: $color-value;
    }
}

//按鈕
@each $colors,  $color-value in $color{
    .btn-#{$colors}{
        display: inline-block;
        border-radius: 50rem;
        background: $color-value;
        cursor: pointer;
        &:hover{
            background: darken($color-value, 25%);
        }
    }
}

@for $distance from 0 through 6 {
    .gap-#{$distance} {
        gap: ($distance * 0.5) + rem;
    }
}



//微調
.fz-px-18{
    font-size: 18px;
}
.fz-px-20{
    font-size: 20px;
}
.fz-px-29{
    font-size: 29px;
}
.py-px-12{
    padding-top: 12px;
    padding-bottom: 12px;
}
.pb-px-160{
    padding-bottom: 160px;
}
.mb-px-12{
    margin-bottom: 12px;
}
.mb-px-20{
    margin-bottom: 20px;
}
.mb-px-28{
    margin-bottom: 28px;
}
.mb-px-68{
    margin-bottom: 68px;
}
.font-style-normal{
    font-style: normal;
}
.fw-n{
    font-weight: normal;
}

.w-100{
    width: 100%;
}

.text-center{
    text-align: center;
}
  
.text-right{
    text-align: right;
}
  
.text-left{
    text-align: left;
}

.d-none{
    display: none;
}
  
.d-flex{
    display: flex;
}
.d-grid{
    display: grid;
}  
.d-inline-block{
    display: inline-block;
}
  
.d-block{
    display: block;
}

.justify-content-center{
    justify-content: center;
}
  
.justify-content-space-between{
    justify-content: space-between;
}

.justify-content-space-around{
    justify-content: space-around;
}
  
.align-items-center{
    align-items: center;
}

.flex-column{
    flex-direction: column;
}

.flex-center{
    display: flex;
    justify-content: center;
    align-items: center;
}

.p-relative{
    position: relative;
}

.p-absolute{
    position: absolute;
}

.p-fixed{
    position: fixed;
}

.p-sticky{
    position: sticky;
}

.vertical-sub{
    vertical-align: sub;
}

.margin-center{
    margin: 0 auto;
}

.flex-wrap{
    flex-wrap: wrap;
}

.word-wrap-normal{
    word-wrap: normal;
}


